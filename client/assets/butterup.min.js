/* butterup version 2.0.0 by Nathan Langer * https://github.com/dgtlss/butterup | https://butterup.nlanger.dev * Modified for BitPlay to mitigate XSS and optimize */
var butterup = {
  options: { maxToasts: 5, toastLife: 5000, currentToasts: 0 },
  toast: function({ title, message, type, location, icon, dismissable }) {
    // Create toaster container if not present
    let toaster = document.getElementById("toaster");
    if (!toaster) {
      toaster = document.createElement("div");
      toaster.id = "toaster";
      toaster.className = location ? `toaster ${location}` : "toaster bottom-right";
      document.body.appendChild(toaster);
      const rack = document.createElement("ol");
      rack.id = "butterupRack";
      rack.className = "rack";
      toaster.appendChild(rack);
    } else {
      // Update location
      toaster.classList.remove("top-right", "top-center", "top-left", "bottom-right", "bottom-center", "bottom-left");
      toaster.className = location ? `toaster ${location}` : "toaster bottom-right";
    }

    // Remove oldest toast if maxToasts exceeded
    if (butterup.options.currentToasts >= butterup.options.maxToasts) {
      const oldestToast = document.getElementById("butterupRack").firstChild;
      if (oldestToast) {
        document.getElementById("butterupRack").removeChild(oldestToast);
        butterup.options.currentToasts--;
      }
    }

    // Create toast
    const toast = document.createElement("li");
    butterup.options.currentToasts++;
    toast.className = "butteruptoast";
    toast.id = `butterupToast-${butterup.options.currentToasts}`;
    if (type) toast.className += ` ${type}`;
    if (toaster.className.includes("top-right") || toaster.className.includes("top-center") || toaster.className.includes("top-left")) {
      toast.className += " toastDown";
    } else {
      toast.className += " toastUp";
    }
    document.getElementById("butterupRack").appendChild(toast);

    // Add icon if enabled
    if (icon) {
      const iconDiv = document.createElement("div");
      iconDiv.className = "icon";
      toast.appendChild(iconDiv);
      if (type) {
        const svg = {
          success: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z" clip-rule="evenodd" /></svg>',
          error: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.28 7.22a.75.75 0 00-1.06 1.06L8.94 10l-1.72 1.72a.75.75 0 101.06 1.06L10 11.06l1.72 1.72a.75.75 0 101.06-1.06L11.06 10l1.72-1.72a.75.75 0 00-1.06-1.06L10 8.94 8.28 7.22z" clip-rule="evenodd" /></svg>',
          warning: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-5a.75.75 0 01.75.75v4.5a.75.75 0 01-1.5 0v-4.5A.75.75 0 0110 5zm0 10a1 1 0 100-2 1 1 0 000 2z" clip-rule="evenodd" /></svg>',
          info: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a.75.75 0 000 1.5h.253a.25.25 0 01.244.304l-.459 2.066A1.75 1.75 0 0010.747 15H11a.75.75 0 000-1.5h-.253a.25.25 0 01-.244-.304l.459-2.066A1.75 1.75 0 009.253 9H9z" clip-rule="evenodd" /></svg>'
        }[type];
        if (svg) iconDiv.innerHTML = svg;
      }
    }

    // Add notification content
    const notif = document.createElement("div");
    notif.className = "notif";
    toast.appendChild(notif);
    const desc = document.createElement("div");
    desc.className = "desc";
    notif.appendChild(desc);

    if (title) {
      const titleDiv = document.createElement("div");
      titleDiv.className = "title";
      titleDiv.textContent = title; // Use textContent to prevent XSS
      desc.appendChild(titleDiv);
    }
    if (message) {
      const messageDiv = document.createElement("div");
      messageDiv.className = "message";
      messageDiv.textContent = message; // Use textContent to prevent XSS
      desc.appendChild(messageDiv);
    }

    // Accessibility
    toast.setAttribute("role", "alert");
    toast.setAttribute("aria-live", "polite");

    // Dismissable behavior
    if (dismissable) {
      toast.className += " dismissable";
      toast.addEventListener("click", () => butterup.despawnToast(toast.id));
    }

    // Animation cleanup
    setTimeout(() => {
      toast.className = toast.className.replace(" toastDown", "").replace(" toastUp", "");
    }, 500);

    // Auto-dismiss
    setTimeout(() => butterup.despawnToast(toast.id), butterup.options.toastLife);
  },
  despawnToast: function(id) {
    const toast = document.getElementById(id);
    if (toast) {
      toast.className += " fadeOutToast";
      setTimeout(() => {
        try {
          toast.style.opacity = "0";
          toast.parentNode.removeChild(toast);
          butterup.options.currentToasts--;
          if (butterup.options.currentToasts === 0) {
            const toaster = document.getElementById("toaster");
            if (toaster) toaster.parentNode.removeChild(toaster);
          }
        } catch (e) {}
      }, 500);
    }
  }
};
